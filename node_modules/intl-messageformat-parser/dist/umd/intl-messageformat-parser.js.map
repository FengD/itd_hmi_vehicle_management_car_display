{"version":3,"file":"intl-messageformat-parser.js","sources":["../../lib/types.js","../../lib/parser.js","../../lib/normalize.js","../../lib/index.js"],"sourcesContent":["export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n})(TYPE || (TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isNumberSkeleton(el) {\n    return el.type === 0 /* number */;\n}\nexport function isDateTimeSkeleton(el) {\n    return el.type === 1 /* dateTime */;\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","// tslint:disable:only-arrow-functions\n// tslint:disable:object-literal-shorthand\n// tslint:disable:trailing-comma\n// tslint:disable:object-literal-sort-keys\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:max-line-length\n// tslint:disable:no-consecutive-blank-lines\n// tslint:disable:align\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.6 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c1 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c2 = peg$otherExpectation(\"argumentElement\");\n    var peg$c3 = \"{\";\n    var peg$c4 = peg$literalExpectation(\"{\", false);\n    var peg$c5 = \"}\";\n    var peg$c6 = peg$literalExpectation(\"}\", false);\n    var peg$c7 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c8 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c9 = /^['\\/{}]/;\n    var peg$c10 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c11 = peg$anyExpectation();\n    var peg$c12 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c13 = \"/\";\n    var peg$c14 = peg$literalExpectation(\"/\", false);\n    var peg$c15 = function (option) { return option; };\n    var peg$c16 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c17 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c18 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c19 = \"::\";\n    var peg$c20 = peg$literalExpectation(\"::\", false);\n    var peg$c21 = function (skeleton) { return skeleton; };\n    var peg$c22 = function (style) { return style.replace(/\\s*$/, ''); };\n    var peg$c23 = \",\";\n    var peg$c24 = peg$literalExpectation(\",\", false);\n    var peg$c25 = \"number\";\n    var peg$c26 = peg$literalExpectation(\"number\", false);\n    var peg$c27 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c28 = \"'\";\n    var peg$c29 = peg$literalExpectation(\"'\", false);\n    var peg$c30 = /^[^']/;\n    var peg$c31 = peg$classExpectation([\"'\"], true, false);\n    var peg$c32 = /^[^a-zA-Z'{}]/;\n    var peg$c33 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c34 = /^[a-zA-Z]/;\n    var peg$c35 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c36 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern }, insertLocation());\n    };\n    var peg$c37 = \"date\";\n    var peg$c38 = peg$literalExpectation(\"date\", false);\n    var peg$c39 = \"time\";\n    var peg$c40 = peg$literalExpectation(\"time\", false);\n    var peg$c41 = \"plural\";\n    var peg$c42 = peg$literalExpectation(\"plural\", false);\n    var peg$c43 = \"selectordinal\";\n    var peg$c44 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c45 = \"offset:\";\n    var peg$c46 = peg$literalExpectation(\"offset:\", false);\n    var peg$c47 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c48 = \"select\";\n    var peg$c49 = peg$literalExpectation(\"select\", false);\n    var peg$c50 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c51 = \"=\";\n    var peg$c52 = peg$literalExpectation(\"=\", false);\n    var peg$c53 = function (id, value) {\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c54 = function (id, value) {\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c55 = peg$otherExpectation(\"whitespace pattern\");\n    var peg$c56 = /^[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/;\n    var peg$c57 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\u200E\", \"\\u200F\", \"\\u2028\", \"\\u2029\"], false, false);\n    var peg$c58 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c59 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c60 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c61 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c62 = peg$otherExpectation(\"number\");\n    var peg$c63 = \"-\";\n    var peg$c64 = peg$literalExpectation(\"-\", false);\n    var peg$c65 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c66 = peg$otherExpectation(\"apostrophe\");\n    var peg$c67 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c68 = \"''\";\n    var peg$c69 = peg$literalExpectation(\"''\", false);\n    var peg$c70 = function () { return \"'\"; };\n    var peg$c71 = /^[{}]/;\n    var peg$c72 = peg$classExpectation([\"{\", \"}\"], false, false);\n    var peg$c73 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c74 = /^[^{}]/;\n    var peg$c75 = peg$classExpectation([\"{\", \"}\"], true, false);\n    var peg$c76 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c77 = peg$otherExpectation(\"argNumber\");\n    var peg$c78 = \"0\";\n    var peg$c79 = peg$literalExpectation(\"0\", false);\n    var peg$c80 = function () { return 0; };\n    var peg$c81 = /^[1-9]/;\n    var peg$c82 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c83 = /^[0-9]/;\n    var peg$c84 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c85 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c86 = peg$otherExpectation(\"argName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0;\n        s0 = peg$parseliteralElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargumentElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parsesimpleFormatElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsepluralElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parseselectElement();\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsedoubleApostrophes();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parsequotedString();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseunquotedString();\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsedoubleApostrophes();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parsequotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parseunquotedString();\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c5;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c6);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c7(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c2);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsepatternWhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c9.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c10);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c11);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsepatternWhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c9.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c10);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c11);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c8);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c13;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c14);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c12);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c17(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c16);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsemessageText();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c25) {\n                                    s7 = peg$c25;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c26);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c5;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c6);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c27(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c28;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c30.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c31);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c30.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c31);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c28;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c29);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c32.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c33);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c32.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c33);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c34.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c35);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c34.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c35);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c36(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsemessageText();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c37) {\n                                    s7 = peg$c37;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c38);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c39) {\n                                        s7 = peg$c39;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c40);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c5;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c6);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c27(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c41) {\n                                    s7 = peg$c41;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c42);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c43) {\n                                        s7 = peg$c43;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c44);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c45) {\n                                                    s12 = peg$c45;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c46);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c5;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c6);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c47(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c48) {\n                                    s7 = peg$c48;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c49);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c5;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c6);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c50(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c51;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c52);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c3;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c4);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s5 = peg$parsemessage();\n                        if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s6 = peg$c5;\n                                peg$currPos++;\n                            }\n                            else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c6);\n                                }\n                            }\n                            if (s6 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c53(s2, s5);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c3;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c4);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s5 = peg$parsemessage();\n                        if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s6 = peg$c5;\n                                peg$currPos++;\n                            }\n                            else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c6);\n                                }\n                            }\n                            if (s6 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c54(s2, s5);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepatternWhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c56.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c59.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c60);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c58);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsepatternWhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsepatternWhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c61);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c63;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c64);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c65(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c62);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c28;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c66);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c68) {\n            s1 = peg$c68;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c69);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c70();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c67);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c28;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            if (peg$c71.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c72);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c68) {\n                    s5 = peg$c68;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c69);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c30.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c31);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c68) {\n                        s5 = peg$c68;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c69);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c30.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c31);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c28;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c29);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c73(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (peg$c74.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c75);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c76);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c78;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c79);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c80();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c81.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c82);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c83.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c84);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c83.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c84);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c85(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c77);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsepatternWhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c11);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsepatternWhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c11);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c86);\n            }\n        }\n        return s0;\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var parse = peg$parse;\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { parse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = parse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","import { parse as pegParse } from './parser';\nimport { normalizeHashtagInPlural } from './normalize';\nexport * from './types';\nexport * from './parser';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n"],"names":["TYPE","this","parse","pegParse"],"mappings":"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"}