'use strict';

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Cover = _interopRequireDefault(require("./modules/Cover"));

var _Contain = _interopRequireDefault(require("./modules/Contain"));

var Img =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Img, _Component);

  function Img(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Img);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Img).call(this, props));

    _this.handleImgLoadError = function () {
      if (_this.props.errorImgSrc) {
        _this.setState({
          src: _this.props.errorImgSrc
        });
      }

      _this.props.onError && _this.props.onError();
    };

    _this.state = {
      src: props.src
    };
    return _this;
  }

  (0, _createClass2.default)(Img, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if ('src' in nextProps) {
        this.setState({
          src: nextProps.src
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var type = this.props.type;

      if (type === 'contain') {
        return _react.default.createElement(_Contain.default, (0, _extends2.default)({}, this.props, this.state, {
          onError: this.handleImgLoadError
        }));
      }

      return _react.default.createElement(_Cover.default, (0, _extends2.default)({}, this.props, this.state, {
        onError: this.handleImgLoadError
      }));
    }
  }]);
  return Img;
}(_react.Component);

exports.default = Img;
Img.displayName = 'Img';
Img.propTypes = {
  /**
   * 图片显示模式
   */
  type: _propTypes.default.oneOf(['cover', 'contain']),

  /**
   * 图片 url
   */
  src: _propTypes.default.string.isRequired,

  /**
   * 图片的 title，hover 上去会显示出来
   */
  title: _propTypes.default.string,

  /**
   * 图片加载失败的兜底图片
   */
  errorImgSrc: _propTypes.default.string,

  /**
   * 图片加载失败的回调方法
   */
  onError: _propTypes.default.func,

  /**
   * 图片显示宽度
   */
  width: _propTypes.default.number,

  /**
   * 图片显示高度
   */
  height: _propTypes.default.number,

  /**
   * 图片的 alt 通常用于屏幕阅读器（盲人）识别
   */
  alt: _propTypes.default.string,

  /**
   * 形状展现
   */
  shape: _propTypes.default.string,

  /**
   * 启用阿里 CDN 图片优化压缩后缀
   */
  enableAliCDNSuffix: _propTypes.default.bool
};
Img.defaultProps = {
  type: 'cover',
  alt: '',
  title: '',
  errorImgSrc: '',
  className: '',
  shape: 'sharp',
  enableAliCDNSuffix: false
};