"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _aliCDNSuffix = _interopRequireDefault(require("./aliCDNSuffix"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var Cover =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Cover, _Component);

  function Cover(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Cover);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Cover).call(this, props));

    _this.imgOnload = function () {
      _this.setState({
        imgStyles: {
          display: 'block',
          maxWidth: 'none',
          wdith: 'auto',
          height: 'auto',
          // transition: 'opacity 0.2s ease',
          opacity: 0
        }
      }, function () {
        var imgDOM = _this.refs.img;
        var _this$props = _this.props,
            width = _this$props.width,
            height = _this$props.height;
        var imgWidth = imgDOM.width;
        var imgHeight = imgDOM.height;
        var imgStyles = getStyles(width, height, imgWidth, imgHeight);

        _this.setState({
          imgStyles: _objectSpread({}, _this.state.imgStyles, {}, imgStyles, {
            opacity: 1
          })
        });
      });
    };

    _this.state = {
      imgStyles: {
        display: 'block',
        maxWidth: 'none',
        wdith: 'auto',
        height: 'auto',
        // transition: 'opacity 0.2s ease',
        opacity: 0
      }
    };
    return _this;
  }

  (0, _createClass2.default)(Cover, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {
        this.imgOnload();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          alt = _this$props2.alt,
          title = _this$props2.title,
          src = _this$props2.src,
          width = _this$props2.width,
          height = _this$props2.height,
          _this$props2$style = _this$props2.style,
          style = _this$props2$style === void 0 ? {} : _this$props2$style,
          className = _this$props2.className,
          onError = _this$props2.onError,
          shape = _this$props2.shape,
          enableAliCDNSuffix = _this$props2.enableAliCDNSuffix,
          errorImgSrc = _this$props2.errorImgSrc,
          type = _this$props2.type,
          others = (0, _objectWithoutProperties2.default)(_this$props2, ["alt", "title", "src", "width", "height", "style", "className", "onError", "shape", "enableAliCDNSuffix", "errorImgSrc", "type"]);

      var styles = _objectSpread({}, style, {
        display: 'inline-block',
        overflow: 'hidden',
        width: width,
        height: height
      });

      var imgStyles = this.state.imgStyles;
      var realSrc = enableAliCDNSuffix ? src + (0, _aliCDNSuffix.default)({
        width: width,
        height: height
      }) : src;
      var cls = (0, _classnames.default)('ice-img', shape, className);
      return _react.default.createElement("div", (0, _extends2.default)({
        className: cls,
        style: styles
      }, others), _react.default.createElement("img", {
        style: imgStyles,
        onError: onError,
        ref: "img",
        src: realSrc,
        alt: alt,
        title: title,
        onLoad: this.imgOnload
      }));
    }
  }]);
  return Cover;
}(_react.Component);

exports.default = Cover;
Cover.displayName = 'Cover';
Cover.propTypes = {
  src: _propTypes.default.string.isRequired,
  width: _propTypes.default.number,
  height: _propTypes.default.number,
  alt: _propTypes.default.string,
  style: _propTypes.default.object,
  onError: _propTypes.default.func
};
Cover.defaultProps = {
  onError: function onError() {},
  alt: ''
};

var getStyles = function getStyles(wrapWidth, wrapHeight, imgWidth, imgHeight) {
  // 进行等比运算
  var wrapRatio = wrapWidth / wrapHeight;
  var imgRatio = imgWidth / imgHeight;
  var finalWidth = 0;
  var finalHeight = 0;
  var finalMarginTop = 0;
  var finalMarginLeft = 0;

  if (wrapRatio > imgRatio) {
    // 父框宽度更大，以父框的宽度为准，拉伸图片上移
    finalWidth = wrapWidth;
    finalHeight = finalWidth / imgRatio;
    finalMarginTop = (finalHeight - wrapHeight) / 2 * -1;
  } else {
    // 父框高度更大，以父框高度为准，拉伸图片左移动
    finalHeight = wrapHeight;
    finalWidth = finalHeight * imgRatio;
    finalMarginLeft = (finalWidth - wrapWidth) / 2 * -1;
  }

  return {
    height: finalHeight,
    width: finalWidth,
    marginLeft: finalMarginLeft,
    marginTop: finalMarginTop
  };
};